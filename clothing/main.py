# -*- coding: utf-8 -*-
"""Scrape.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t3p6Gsvfpt-ryq2ByQIcaFtlmZ2_8K17
"""

import numpy as np
from flask import Flask, request, jsonify, render_template
import requests
import pandas as pd
from keras.preprocessing.text import text_to_word_sequence
from sklearn.feature_extraction.text import TfidfVectorizer,ENGLISH_STOP_WORDS
from sklearn.metrics.pairwise import cosine_similarity


def scrape_text():
  
  def exctractpage(pagenum):
      result_list=[]
      headers = {
          'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8,ar;q=0.7',
          'Cache-Control': 'no-cache',
          'Connection': 'keep-alive',
          'Origin': 'https://eg.hm.com',
          'Pragma': 'no-cache',
          'Referer': 'https://eg.hm.com/',
          'Sec-Fetch-Dest': 'empty',
          'Sec-Fetch-Mode': 'cors',
          'Sec-Fetch-Site': 'cross-site',
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36',
          'accept': 'application/json',
          'content-type': 'application/x-www-form-urlencoded',
          'sec-ch-ua': '"Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"',
          'sec-ch-ua-mobile': '?0',
          'sec-ch-ua-platform': '"Windows"',
      }

      data = '{"requests":[{"indexName":"01live_hmeg_product_list","params":"query=&hitsPerPage=36&maxValuesPerFacet=NaN&page='+str(pagenum)+'&highlightPreTag=%3Cais-highlight-0000000000%3E&highlightPostTag=%3C%2Fais-highlight-0000000000%3E&clickAnalytics=true&filters=(stock%20%3E%200)%20AND%20(field_category_name.en.lvl2%3A%20%22Men%20%3E%20New%20Arrivals%20%3E%20Clothes%22)&ruleContexts=%5B%22men__new_arrivals__clothes%22%2C%22men__new_arrivals%22%2C%22men%22%5D&optionalFilters=null&facets=%5B%22attr_size.en%22%2C%22attr_color_family.en.value%22%2C%22attr_presentation_product_type.en%22%2C%22final_price.en%22%2C%22field_acq_promotion_label.en.web%22%2C%22attr_product_collection.en%22%2C%22attr_concept.en%22%2C%22attr_accessories_style.en%22%2C%22attr_age_group.en%22%2C%22attr_clothing_style.en%22%2C%22attr_collar_style.en%22%2C%22attr_context.en%22%2C%22attr_descriptive_length.en%22%2C%22attr_fit.en%22%2C%22attr_footwear_style.en%22%2C%22attr_function.en%22%2C%22attr_garment_length.en%22%2C%22attr_heel_height.en%22%2C%22attr_neckline_style.en%22%2C%22attr_occasion.en%22%2C%22attr_sleeve_length.en%22%2C%22attr_waist_rise.en%22%2C%22field_category.en%22%2C%22lhn_category.en.lvl0%22%2C%22lhn_category.en.lvl1%22%2C%22lhn_category.en.lvl2%22%2C%22lhn_category.en.lvl3%22%5D&tagFilters=&facetFilters=%5B%5B%22lhn_category.en.lvl2%3AMen%20%3E%20New%20Arrivals%20%3E%20Clothes%22%5D%5D"},{"indexName":"01live_hmeg_product_list","params":"query=&hitsPerPage=1&maxValuesPerFacet=NaN&page=0&highlightPreTag=%3Cais-highlight-0000000000%3E&highlightPostTag=%3C%2Fais-highlight-0000000000%3E&clickAnalytics=false&filters=(stock%20%3E%200)%20AND%20(field_category_name.en.lvl2%3A%20%22Men%20%3E%20New%20Arrivals%20%3E%20Clothes%22)&ruleContexts=%5B%22men__new_arrivals__clothes%22%2C%22men__new_arrivals%22%2C%22men%22%5D&optionalFilters=null&attributesToRetrieve=%5B%5D&attributesToHighlight=%5B%5D&attributesToSnippet=%5B%5D&tagFilters=&analytics=false&facets=%5B%22lhn_category.en.lvl0%22%2C%22lhn_category.en.lvl1%22%2C%22lhn_category.en.lvl2%22%5D"},{"indexName":"01live_hmeg_product_list","params":"query=&hitsPerPage=1&maxValuesPerFacet=NaN&page=0&highlightPreTag=%3Cais-highlight-0000000000%3E&highlightPostTag=%3C%2Fais-highlight-0000000000%3E&clickAnalytics=false&filters=(stock%20%3E%200)%20AND%20(field_category_name.en.lvl2%3A%20%22Men%20%3E%20New%20Arrivals%20%3E%20Clothes%22)&ruleContexts=%5B%22men__new_arrivals__clothes%22%2C%22men__new_arrivals%22%2C%22men%22%5D&optionalFilters=null&attributesToRetrieve=%5B%5D&attributesToHighlight=%5B%5D&attributesToSnippet=%5B%5D&tagFilters=&analytics=false&facets=%5B%22lhn_category.en.lvl3%22%5D"}]}'


      response = requests.post('https://hgr051i5xn-dsn.algolia.net/1/indexes/*/queries?x-algolia-agent=Algolia%20for%20JavaScript%20(3.35.1)%3B%20Browser%20(lite)%3B%20react%20(16.9.0)%3B%20react-instantsearch%20(5.7.0)%3B%20JS%20Helper%20(2.28.1)&x-algolia-application-id=HGR051I5XN&x-algolia-api-key=a2fdc9d456e5e714d8b654dfe1d8aed8', headers=headers, data=data)
      data=response.json()
      numberofproducts=data['results'][0]['hitsPerPage']
      for i in range(0,numberofproducts):
          product={}
          try:
              Title=data['results'][0]['hits'][i]['title']['en']
          except:
              Tilte='None'
          try:
              Price=data['results'][0]['hits'][i]['attr_selling_price']['en'][0]
          except:
              Price='None'
          try:
              Colors=",".join(data['results'][0]['hits'][i]['attr_color_label']['en'])
          except:
              Colors='None'
          try:
              Size=",".join(data['results'][0]['hits'][i]['attr_size']['en'])
          except:
              Size='None'
          try:
              item_context=",".join(data['results'][0]['hits'][i]['attr_context']['en'])
          except:
              item_context='None'
          try:
              Url="https://eg.hm.com"+data['results'][0]['hits'][i]['url']['en']
          except:
              Url='None'
          product['Title']=Title
          product['Price']=Price
          product['Available_Colors']=Colors
          product['Available_Size']=Size
          product['Item_Context']=item_context
          product['Url']=Url
          result_list.append(product)
      return result_list


  master_list=[]
  headers = {
      'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8,ar;q=0.7',
      'Cache-Control': 'no-cache',
      'Connection': 'keep-alive',
      'Origin': 'https://eg.hm.com',
      'Pragma': 'no-cache',
      'Referer': 'https://eg.hm.com/',
      'Sec-Fetch-Dest': 'empty',
      'Sec-Fetch-Mode': 'cors',
      'Sec-Fetch-Site': 'cross-site',
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36',
      'accept': 'application/json',
      'content-type': 'application/x-www-form-urlencoded',
      'sec-ch-ua': '"Google Chrome";v="105", "Not)A;Brand";v="8", "Chromium";v="105"',
      'sec-ch-ua-mobile': '?0',
      'sec-ch-ua-platform': '"Windows"',
  }

  data = '{"requests":[{"indexName":"01live_hmeg_product_list","params":"query=&hitsPerPage=36&maxValuesPerFacet=NaN&page=0&highlightPreTag=%3Cais-highlight-0000000000%3E&highlightPostTag=%3C%2Fais-highlight-0000000000%3E&clickAnalytics=true&filters=(stock%20%3E%200)%20AND%20(field_category_name.en.lvl2%3A%20%22Men%20%3E%20New%20Arrivals%20%3E%20Clothes%22)&ruleContexts=%5B%22men__new_arrivals__clothes%22%2C%22men__new_arrivals%22%2C%22men%22%5D&optionalFilters=null&facets=%5B%22attr_size.en%22%2C%22attr_color_family.en.value%22%2C%22attr_presentation_product_type.en%22%2C%22final_price.en%22%2C%22field_acq_promotion_label.en.web%22%2C%22attr_product_collection.en%22%2C%22attr_concept.en%22%2C%22attr_accessories_style.en%22%2C%22attr_age_group.en%22%2C%22attr_clothing_style.en%22%2C%22attr_collar_style.en%22%2C%22attr_context.en%22%2C%22attr_descriptive_length.en%22%2C%22attr_fit.en%22%2C%22attr_footwear_style.en%22%2C%22attr_function.en%22%2C%22attr_garment_length.en%22%2C%22attr_heel_height.en%22%2C%22attr_neckline_style.en%22%2C%22attr_occasion.en%22%2C%22attr_sleeve_length.en%22%2C%22attr_waist_rise.en%22%2C%22field_category.en%22%2C%22lhn_category.en.lvl0%22%2C%22lhn_category.en.lvl1%22%2C%22lhn_category.en.lvl2%22%2C%22lhn_category.en.lvl3%22%5D&tagFilters=&facetFilters=%5B%5B%22lhn_category.en.lvl2%3AMen%20%3E%20New%20Arrivals%20%3E%20Clothes%22%5D%5D"},{"indexName":"01live_hmeg_product_list","params":"query=&hitsPerPage=1&maxValuesPerFacet=NaN&page=0&highlightPreTag=%3Cais-highlight-0000000000%3E&highlightPostTag=%3C%2Fais-highlight-0000000000%3E&clickAnalytics=false&filters=(stock%20%3E%200)%20AND%20(field_category_name.en.lvl2%3A%20%22Men%20%3E%20New%20Arrivals%20%3E%20Clothes%22)&ruleContexts=%5B%22men__new_arrivals__clothes%22%2C%22men__new_arrivals%22%2C%22men%22%5D&optionalFilters=null&attributesToRetrieve=%5B%5D&attributesToHighlight=%5B%5D&attributesToSnippet=%5B%5D&tagFilters=&analytics=false&facets=%5B%22lhn_category.en.lvl0%22%2C%22lhn_category.en.lvl1%22%2C%22lhn_category.en.lvl2%22%5D"},{"indexName":"01live_hmeg_product_list","params":"query=&hitsPerPage=1&maxValuesPerFacet=NaN&page=0&highlightPreTag=%3Cais-highlight-0000000000%3E&highlightPostTag=%3C%2Fais-highlight-0000000000%3E&clickAnalytics=false&filters=(stock%20%3E%200)%20AND%20(field_category_name.en.lvl2%3A%20%22Men%20%3E%20New%20Arrivals%20%3E%20Clothes%22)&ruleContexts=%5B%22men__new_arrivals__clothes%22%2C%22men__new_arrivals%22%2C%22men%22%5D&optionalFilters=null&attributesToRetrieve=%5B%5D&attributesToHighlight=%5B%5D&attributesToSnippet=%5B%5D&tagFilters=&analytics=false&facets=%5B%22lhn_category.en.lvl3%22%5D"}]}'
  response = requests.post('https://hgr051i5xn-dsn.algolia.net/1/indexes/*/queries?x-algolia-agent=Algolia%20for%20JavaScript%20(3.35.1)%3B%20Browser%20(lite)%3B%20react%20(16.9.0)%3B%20react-instantsearch%20(5.7.0)%3B%20JS%20Helper%20(2.28.1)&x-algolia-application-id=HGR051I5XN&x-algolia-api-key=a2fdc9d456e5e714d8b654dfe1d8aed8', headers=headers, data=data)
  data=response.json()
  numberofpages=data['results'][0]['nbPages']
  numberofprodcuts=data['results'][0]['nbHits']
  for i in range(0,numberofpages):
      master_list.extend(exctractpage(i))

  df = pd.DataFrame(master_list[0:numberofprodcuts])

  df['Title']=df['Title']+' '+df['Item_Context']+' '+df['Available_Size']+' '+df['Available_Colors']
  df=df.drop(['Price','Item_Context','Available_Size','Available_Colors'],axis=1)
  database = []
  for index, row in df.iterrows():
      item = {'text': row['Title'], 'url': row['Url']}
      database.append(item)
  return database

def find_similar_items(text, database, n=13):
    # Tokenize and preprocess the input text
    #import nltk
    stop_words = ENGLISH_STOP_WORDS
    text = text['text'].lower()
    text_tokens = text_to_word_sequence(text)
    text_tokens = [token for token in text_tokens if token.isalnum() and token not in stop_words]
    preprocessed_text = ' '.join(text_tokens)

    # Vectorize the text and database items
    vectorizer = TfidfVectorizer()
    items = [item['text'] for item in database]
    items.append(preprocessed_text)
    tfidf_matrix = vectorizer.fit_transform(items)

    # Compute cosine similarity between the text and database items
    similarities = cosine_similarity(tfidf_matrix[:-1], tfidf_matrix[-1])

    # Sort the similarities and get the top-N most similar items
    top_indices = similarities.argsort(axis=None)[-n:]
    top_indices = top_indices[::-1]

    # Retrieve the URLs of the most similar items
    similar_items_urls = [database[i]['url'] for i in top_indices]

    return similar_items_urls

# Initialize Flask app
app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')

# Define Flask route for prediction
@app.route("/predict", methods=["POST"])
def predict():
    # Get input data from request
    iput = request.get_json()
    

    # Scrape text from the provided URL
    database = scrape_text()

    # Find similar items
    similar_items = find_similar_items(iput,database)

    # Return the predictions
    response = {"similar_items": similar_items}
    print(response)
    return jsonify(response)

# Run the Flask app
if __name__ == "__main__":
    app.run(debug=True)

